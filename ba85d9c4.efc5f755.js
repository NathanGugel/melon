(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{100:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return s}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=r.a.createContext({}),u=function(e){var t=r.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):b(b({},t),e)),n},p=function(e){var t=u(e.components);return r.a.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,l=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),p=u(n),d=a,s=p["".concat(l,".").concat(d)]||p[d]||m[d]||c;return n?r.a.createElement(s,b(b({ref:t},i),{},{components:n})):r.a.createElement(s,b({ref:t},i))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,l=new Array(c);l[0]=d;var b={};for(var o in t)hasOwnProperty.call(t,o)&&(b[o]=t[o]);b.originalType=e,b.mdxType="string"==typeof e?e:a,l[1]=b;for(var i=2;i<c;i++)l[i]=n[i];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return b})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return u}));var a=n(2),r=n(6),c=(n(0),n(100)),l={id:"function_module",title:"function",sidebar_label:"function",slug:"/modules/function_module"},b={unversionedId:"function_module",id:"function_module",isDocsHomePage:!1,title:"function",description:"This module can be used to programmatically interact with Function",source:"@site/docs/function_module.md",slug:"/modules/function_module",permalink:"/melon/docs/modules/function_module",editUrl:"https://github.com/daniele-rapagnani/edit/master/docs/docs/function_module.md",version:"current",sidebar_label:"function",sidebar:"someSidebar",previous:{title:"fs",permalink:"/melon/docs/modules/fs_module"},next:{title:"gc",permalink:"/melon/docs/modules/gc_module"}},o=[{value:"Functions",id:"functions",children:[{value:"call(func, args)",id:"callfunc-args",children:[]},{value:"getName(func)",id:"getnamefunc",children:[]},{value:"getArgsCount(func)",id:"getargscountfunc",children:[]},{value:"getFile(func)",id:"getfilefunc",children:[]}]}],i={rightToc:o};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"This module can be used to programmatically interact with ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/melon/docs/types/function"}),Object(c.b)("inlineCode",{parentName:"a"},"Function")),"\nvalues. Most of the functions in this module can be built upon to enable\nbasic functional programming patterns."),Object(c.b)("h2",{id:"functions"},"Functions"),Object(c.b)("h3",{id:"callfunc-args"},"call(func, args)"),Object(c.b)("p",null,"Calls a function value programmatically   "),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Argument"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("strong",{parentName:"td"},"func")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The function to be invoked")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("strong",{parentName:"td"},"args")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"An array of arguments with which the function will be invoked")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," Whatever the original function returned"),Object(c.b)("h3",{id:"getnamefunc"},"getName(func)"),Object(c.b)("p",null,"Gets the name of a function value  "),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Argument"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("strong",{parentName:"td"},"func")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The function to extract the name from")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," The function","'","s name if any, ",Object(c.b)("inlineCode",{parentName:"p"},"null")," otherwise"),Object(c.b)("h3",{id:"getargscountfunc"},"getArgsCount(func)"),Object(c.b)("p",null,"Gets the number of arguments a given function expects  "),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Argument"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("strong",{parentName:"td"},"func")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The function to inspect")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," An integer representing the number of expected arguments"),Object(c.b)("h3",{id:"getfilefunc"},"getFile(func)"),Object(c.b)("p",null,"Returns the path to the file in which a given function value was defined. If the string is built-in or was defined in some non-standard way ",Object(c.b)("inlineCode",{parentName:"p"},"null")," will be returned.  "),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Argument"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("strong",{parentName:"td"},"func")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The function to inspect")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," A string containing the path to the file or ",Object(c.b)("inlineCode",{parentName:"p"},"null")))}u.isMDXComponent=!0}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{100:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return g}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=a.a.createContext({}),b=function(e){var n=a.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=b(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=b(t),m=r,g=u["".concat(c,".").concat(m)]||u[m]||s[m]||o;return t?a.a.createElement(g,i(i({ref:n},p),{},{components:t})):a.a.createElement(g,i({ref:n},p))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,c=new Array(o);c[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var p=2;p<o;p++)c[p]=t[p];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},74:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return i})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return b}));var r=t(2),a=t(6),o=(t(0),t(100)),c={id:"range",title:"Range",sidebar_label:"Range",slug:"/types/range"},i={unversionedId:"range",id:"range",isDocsHomePage:!1,title:"Range",description:"A Range represents a consecutive range of integers.",source:"@site/docs/range.md",slug:"/types/range",permalink:"/melon/docs/types/range",editUrl:"https://github.com/daniele-rapagnani/edit/master/docs/docs/range.md",version:"current",sidebar_label:"Range",sidebar:"someSidebar",previous:{title:"Function",permalink:"/melon/docs/types/function"},next:{title:"Symbol",permalink:"/melon/docs/types/symbol"}},l=[],p={rightToc:l};function b(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"A ",Object(o.b)("inlineCode",{parentName:"p"},"Range")," represents a consecutive range of integers.\nA range can be created by using the concatenation operator ",Object(o.b)("inlineCode",{parentName:"p"},"..")," on two integers:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let myRange = 1..10\nlet myOtherRange = (2 - 1)..(5 + 5);\n")),Object(o.b)("p",null,"This will create a range of consecutive numbers ranging from 0 to 10 (excluded)."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"Range")," values have a native ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/melon/docs/types/iterator"}),Object(o.b)("inlineCode",{parentName:"a"},"Iterator"))," that can be used to access the numbers in the range:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let myRange = 1..10;\nlet myRangeIt = >myRange;\n\nio.print((*myRangeIt).value); // 1\nio.print((*myRangeIt).value); // 2\nio.print((*myRangeIt).value); // 3\n")),Object(o.b)("p",null,"You can use a ",Object(o.b)("inlineCode",{parentName:"p"},"for in")," loop to iterate over a ",Object(o.b)("inlineCode",{parentName:"p"},"Range")," to get a classic for loop:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"for (let i in 0..5) {\n    io.print(i);\n}\n")),Object(o.b)("p",null,"Outputs:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"0\n1\n2\n3\n4\n")),Object(o.b)("p",null,"Numbers in a ",Object(o.b)("inlineCode",{parentName:"p"},"Range")," value can also be in descending order:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"for (let i in 5..0) {\n    io.print(i);\n}\n")),Object(o.b)("p",null,"Outputs:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"4\n3\n2\n1\n0\n")))}b.isMDXComponent=!0}}]);